# ==================================================
# vars

config("leveldb_config") {
  include_dirs = [ "include" ]
}

static_library("leveldb") {
  sources = [
    "db/builder.cc",
    "db/builder.h",
    "db/db_impl.cc",
    "db/db_impl.h",
    "db/db_iter.cc",
    "db/db_iter.h",
    "db/filename.cc",
    "db/filename.h",
    "db/dbformat.cc",
    "db/dbformat.h",
    "db/log_format.h",
    "db/log_reader.cc",
    "db/log_reader.h",
    "db/log_writer.cc",
    "db/log_writer.h",
    "db/memtable.cc",
    "db/memtable.h",
    "db/repair.cc",
    "db/skiplist.h",
    "db/snapshot.h",
    "db/table_cache.cc",
    "db/table_cache.h",
    "db/version_edit.cc",
    "db/version_edit.h",
    "db/version_set.cc",
    "db/version_set.h",
    "db/write_batch.cc",
    "db/write_batch_internal.h",
    "helpers/memenv/memenv.cc",
    "helpers/memenv/memenv.h",
    "include/leveldb/cache.h",
    "include/leveldb/comparator.h",
    "include/leveldb/db.h",
    "include/leveldb/dumpfile.h",
    "include/leveldb/env.h",
    "include/leveldb/filter_policy.h",
    "include/leveldb/iterator.h",
    "include/leveldb/options.h",
    "include/leveldb/slice.h",
    "include/leveldb/status.h",
    "include/leveldb/table.h",
    "include/leveldb/table_builder.h",
    "include/leveldb/write_batch.h",
    "port/port.h",
    "table/block.cc",
    "table/block.h",
    "table/block_builder.cc",
    "table/block_builder.h",
    "table/filter_block.cc",
    "table/filter_block.h",
    "table/format.cc",
    "table/format.h",
    "table/iterator.cc",
    "table/iterator_wrapper.h",
    "table/merger.cc",
    "table/merger.h",
    "table/table.cc",
    "table/table_builder.cc",
    "table/two_level_iterator.cc",
    "table/two_level_iterator.h",
    "util/arena.cc",
    "util/arena.h",
    "util/bloom.cc",
    "util/cache.cc",
    "util/coding.cc",
    "util/coding.h",
    "util/comparator.cc",
    "util/crc32c.cc",
    "util/crc32c.h",
    "util/env.cc",
    "util/filter_policy.cc",
    "util/hash.cc",
    "util/hash.h",
    "util/logging.cc",
    "util/logging.h",
    "util/mutexlock.h",
    "util/options.cc",
    "util/random.h",
    "util/status.cc",
    "port/port_stdcxx.h",
  ]
  
  include_dirs = [ "." ]
  defines = [ "SNAPPY=1" ]
  
  if (is_win) {
    defines += [
      "LEVELDB_PLATFORM_WINDOWS=1",
      "_UNICODE",
      "UNICODE",
    ]
    sources += [
      "util/env_windows.cc",
      "util/windows_logger.h",
    ]
  } else {
    defines += [
      "LEVELDB_PLATFORM_POSIX=1",
    ]
    sources += [
      "util/env_posix.cc",
    ]
    cflags = [
      "-fno-builtin-memcmp",
      #"-fPIC",
    ]
  }

  public_configs = [ ":leveldb_config" ]
  deps = [ "../snappy:snappy" ]
  if (is_win) {
    deps += [ "../libuv:libuv" ]
  }
}

#executable("test_leveldb") {
#  testonly = true
#  sources = [ "test_leveldb.cpp" ]
#  deps = [
#    ":gtest_main",
#    ":leveldb"
#  ]
#}
